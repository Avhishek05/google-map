{"version":3,"sources":["table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","id","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","type","style","height","width","src","value","TableComponent","props","React","useMemo","Header","accessor","App","useState","users","setUsers","selected","setSelected","useEffect","axios","get","then","res","results","className","textAlign","onClick","bootstrapURLKeys","key","defaultCenter","defaultZoom","item","index","display","lat","location","coordinates","latitude","lng","longitude","name","first","last","country","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d74c3f7a.chunk.js","sourcesContent":["import React from 'react'\nimport { useTable } from 'react-table'\n\nfunction Table({ columns, data }) {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  })\n  return (\n    <table id=\"user\" {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => \n              {\n                  return <th {...column.getHeaderProps()}>{column.render('Header')}</th>}\n            )}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {                    \n                return <td {...cell.getCellProps()}>{cell.column.type === 'img'?<img style={{height: 100, width: 100}} src={cell.value} />:cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n\nfunction TableComponent(props) {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        columns: [\n          {\n            Header: 'First Name',\n            accessor: 'name.first',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'name.last',\n          }, {\n            Header: 'Age',\n            accessor: 'dob.age',\n          },\n        ],\n      },\n      {\n        Header: 'Image',\n        columns: [\n          {\n            Header: 'Large Image',\n            accessor: 'picture.large',\n            type: 'img',\n          },\n          {\n            Header: 'Medium Name',\n            accessor: 'picture.medium',\n            type: 'img',\n          },\n          {\n            Header: 'Thumbnail Image',\n            accessor: 'picture.thumbnail',\n            type: 'img',\n          },\n        ],\n      },\n      {\n        Header: 'Location',\n        columns: [\n          {\n            Header: 'Latitude',\n            accessor: 'location.coordinates.latitude',\n          },\n          {\n            Header: 'Longitude',\n            accessor: 'location.coordinates.longitude',\n          },\n          {\n            Header: 'City',\n            accessor: 'location.city',\n          }\n        ],\n      },\n    ],\n    []\n  )\n\n  return (\n      <Table columns={columns} data={props.data?[props.data]:[]} />\n  )\n}\n\nexport default TableComponent;\n","import axios from 'axios';\nimport GoogleMapReact from 'google-map-react';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport TableComponent from './table';\n\nfunction App() {\n\n  const [users, setUsers] = useState([])\n  const [selected, setSelected] = useState(null);\n\n  useEffect(() => {\n    axios.get('https://randomuser.me/api/?page=1&results=300').then((res) => {\n      setUsers(res.data.results)\n    })\n  }, [])\n  return (\n    <div>\n      <div style={{ height: selected?'calc(100vh - 285px)':'calc(100vh - 60px)', width: '100%' }}>\n        <div className=\"header\">\n          <h3 style={{textAlign:'center'}}>Hover or Click on any pin to see details</h3>\n          {\n            selected && <button className=\"button\" onClick={()=> setSelected(null)}>Reset</button>\n          }\n        </div>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: \"\" }}\n          defaultCenter={[59.938043, 30.337157]} // default location\n          defaultZoom={1}\n        >\n          {\n            users?.map((item, index) => {\n              return <div key={index} style={{display: 'flex'}} onClick={()=> setSelected(item)} lat={item.location.coordinates.latitude} lng={item.location.coordinates.longitude}>\n              <div className=\"popover__wrapper\">\n              <div className=\"pin\"></div>\n                <div className=\"popover__content\">\n                <div className='text'>{item.name.first }&nbsp;{item.name.last },&nbsp;{item.location.country}</div>\n                </div>\n              </div>\n            </div>\n            })\n          }\n        </GoogleMapReact>\n      </div>\n     {selected && <TableComponent data={selected} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}